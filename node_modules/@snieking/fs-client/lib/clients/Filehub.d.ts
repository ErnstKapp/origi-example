import { User } from 'ft3-lib';
import { FsFile } from '../models/FsFile';
import Filechain from './Filechain';
import TransactionBuilder from 'ft3-lib/dist/ft3/core/transaction-builder';
export declare class Filehub {
    private static getChunkDataByHash;
    private readonly blockchain;
    constructor(nodeUrl: string, brid: string);
    /**
     * Stores a file. Contacts the Filehub and allocates a chunk, and then persists the data in the correct filechain.
     */
    storeFile(user: User, file: FsFile): Promise<any>;
    /**
     * Retrieves a file by its hash.
     *
     * @param passphrase optional options for retrieving file.
     */
    getFile(hash: Buffer): Promise<FsFile>;
    transactionBuilder(): Promise<TransactionBuilder>;
    initFilechainClient(url: string, brid: string): Filechain;
    private storeChunks;
    private persistChunkDataInFilechain;
    private getChunkLocations;
    private getChunk;
    private allocateChunk;
    /**
     * Executes a operation towards the Filehub.
     *
     * @param user to sign the operation.
     * @param operation to perform.
     */
    private executeOperation;
    /**
     * Queries the Filehub for data.
     *
     * @param query the identifier of the query.
     * @param data to provide in the query.
     */
    private executeQuery;
}
