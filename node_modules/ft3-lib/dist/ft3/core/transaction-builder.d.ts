import Blockchain from "./blockchain/blockchain";
import Transaction from "./transaction";
import { GtvSerializable } from "../user/account";
import Operation from "./operation";
import User from "../user/user";
declare global {
    interface Array<T> extends GtvSerializable {
    }
    interface String extends GtvSerializable {
    }
    interface Number extends GtvSerializable {
    }
    interface Buffer extends GtvSerializable {
    }
    interface Boolean extends GtvSerializable {
    }
}
export default class TransactionBuilder {
    private operations;
    readonly blockchain: Blockchain;
    constructor(blockchain: Blockchain);
    add(operation: Operation): TransactionBuilder;
    build(signers: Buffer[]): Transaction;
    buildAndSign(user: User): Transaction;
}
