"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var keyPair_1 = require("../../../cyptoUtils/keyPair");
var SSOStoreLocalStorage = /** @class */ (function () {
    function SSOStoreLocalStorage() {
    }
    Object.defineProperty(SSOStoreLocalStorage.prototype, "tmpKeyPair", {
        get: function () {
            var privKeyString = localStorage.getItem('__ssoTmpPrivKey');
            if (!privKeyString) {
                return null;
            }
            return new keyPair_1.default(privKeyString);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SSOStoreLocalStorage.prototype, "keyPair", {
        get: function () {
            var privKeyString = localStorage.getItem('__ssoPrivKey');
            if (!privKeyString) {
                return null;
            }
            return new keyPair_1.default(privKeyString);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SSOStoreLocalStorage.prototype, "tmpPrivKey", {
        get: function () {
            var privKeyString = localStorage.getItem('__ssoTmpPrivKey');
            if (!privKeyString) {
                return null;
            }
            return Buffer.from(privKeyString, 'hex');
        },
        set: function (value) {
            localStorage.setItem('__ssoTmpPrivKey', value.toString('hex'));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SSOStoreLocalStorage.prototype, "privKey", {
        get: function () {
            var privKeyString = localStorage.getItem('__ssoPrivKey');
            if (!privKeyString) {
                return null;
            }
            return Buffer.from(privKeyString, 'hex');
        },
        set: function (value) {
            localStorage.setItem('__ssoPrivKey', value.toString('hex'));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SSOStoreLocalStorage.prototype, "accountId", {
        get: function () {
            var accountIdString = localStorage.getItem('__ssoAccountId');
            if (!accountIdString) {
                return null;
            }
            return Buffer.from(accountIdString, 'hex');
        },
        set: function (value) {
            localStorage.setItem('__ssoAccountId', value.toString('hex'));
        },
        enumerable: true,
        configurable: true
    });
    SSOStoreLocalStorage.prototype.clearTmp = function () {
        localStorage.removeItem('__ssoTmpPrivKey');
    };
    SSOStoreLocalStorage.prototype.clear = function () {
        this.clearTmp();
        localStorage.removeItem('__ssoPrivKey');
        localStorage.removeItem('__ssoAccountId');
    };
    return SSOStoreLocalStorage;
}());
exports.default = SSOStoreLocalStorage;
//# sourceMappingURL=sso-store-local-storage.js.map