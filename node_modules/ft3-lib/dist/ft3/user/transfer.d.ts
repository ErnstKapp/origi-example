import { GtvSerializable } from "./account";
export declare class XferInput implements GtvSerializable {
    readonly accountId: Buffer;
    readonly authDescriptorId: Buffer;
    readonly assetId: Buffer;
    readonly amount: number;
    constructor(accountId: Buffer, authDescriptorId: Buffer, assetId: Buffer, amount: number);
    toGTV(): any[];
}
export declare function xferInput(accountId: Buffer, authDescriptorId: Buffer, assetId: Buffer, amount: number): XferInput;
export declare class XferOutput implements GtvSerializable {
    readonly accountId: Buffer;
    readonly assetId: Buffer;
    readonly amount: number;
    constructor(accountId: Buffer, assetId: Buffer, amount: number);
    toGTV(): any[];
}
export declare function xferOutput(accountId: Buffer, assetId: Buffer, amount: number): XferOutput;
export declare class SimpleTransfer implements GtvSerializable {
    readonly sourceAccountId: Buffer;
    readonly destinationAccountId: Buffer;
    readonly authDescriptorId: Buffer;
    readonly assetId: Buffer;
    readonly amount: number;
    constructor(sourceAccountId: Buffer, destinationAccountId: Buffer, authDescriptorId: Buffer, assetId: Buffer, amount: number);
    toGTV(): any[];
}
export declare function simpleTransfer(sourceAccountId: Buffer, destinationAccountId: Buffer, authDescriptorId: Buffer, assetId: Buffer, amount: number): SimpleTransfer;
export declare class Transfer implements GtvSerializable {
    readonly inputs: XferInput[];
    readonly outputs: XferOutput[];
    constructor(inputs: XferInput[], outputs: XferOutput[]);
    toGTV(): any[];
}
